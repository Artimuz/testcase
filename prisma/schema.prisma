// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role
  active    Boolean  @default(true)
  createdAt DateTime @default(now())

  products  Product[]
  orders    Order[]
  favorites Favorite[]
  cart      Cart?
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  quantity    Int      @default(0)
  imageUrl    String
  publishedAt DateTime @default(now())
  active      Boolean  @default(true)

  sellerId String
  seller   User   @relation(fields: [sellerId], references: [id])

  orderItems OrderItem[]
  favorites  Favorite[]
  cartItems  CartItem[]
}

model Order {
  id         String   @id @default(cuid())
  customerId String
  customer   User     @relation(fields: [customerId], references: [id])
  total      Float
  createdAt  DateTime @default(now())
  status     String   @default("COMPLETED")

  items OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float

  @@unique([orderId, productId], name: "orderId_productId")
}

model Favorite {
  id        String  @id @default(cuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId], name: "userId_productId")
}

model Cart {
  id     String     @id @default(cuid())
  userId String     @unique
  user   User       @relation(fields: [userId], references: [id])
  items  CartItem[]
}

model CartItem {
  id        String  @id @default(cuid())
  cartId    String
  cart      Cart    @relation(fields: [cartId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)

  @@unique([cartId, productId], name: "cart_product_unique")
}

enum Role {
  CLIENTE
  VENDEDOR
}
